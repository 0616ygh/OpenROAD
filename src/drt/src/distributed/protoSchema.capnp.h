// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: protoSchema.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 10000
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif


CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(8dca6314360f705a);
CAPNP_DECLARE_SCHEMA(a863d0b5dcea3083);
CAPNP_DECLARE_SCHEMA(8639373ff214e0a3);
CAPNP_DECLARE_SCHEMA(f2d723511d40bc6e);
enum class ProtoEndStyle_f2d723511d40bc6e: uint16_t {
  TRUNCATE_END_STYLE,
  EXTEND_END_STYLE,
  VARIABLE_END_STYLE,
};
CAPNP_DECLARE_ENUM(ProtoEndStyle, f2d723511d40bc6e);
CAPNP_DECLARE_SCHEMA(891254f96e916dd0);
CAPNP_DECLARE_SCHEMA(f63e8d35e3d1d93a);
CAPNP_DECLARE_SCHEMA(b27487b25fea119e);
enum class ProtoUpdateType_b27487b25fea119e: uint16_t {
  ADD_SHAPE,
  ADD_GUIDE,
  REMOVE_FROM_NET,
  REMOVE_FROM_BLOCK,
};
CAPNP_DECLARE_ENUM(ProtoUpdateType, b27487b25fea119e);
CAPNP_DECLARE_SCHEMA(deb065a34fc3ecd8);
enum class ProtoShapeType_deb065a34fc3ecd8: uint16_t {
  PATH_SEG,
  PATCH_WIRE,
  VIA,
  NONE,
};
CAPNP_DECLARE_ENUM(ProtoShapeType, deb065a34fc3ecd8);

}  // namespace schemas
}  // namespace capnp


struct ProtoPoint {
  ProtoPoint() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8dca6314360f705a, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ProtoRect {
  ProtoRect() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(a863d0b5dcea3083, 0, 2)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ProtoSegStyle {
  ProtoSegStyle() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  typedef ::capnp::schemas::ProtoEndStyle_f2d723511d40bc6e ProtoEndStyle;


  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(8639373ff214e0a3, 2, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ProtoNet {
  ProtoNet() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(891254f96e916dd0, 1, 0)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

struct ProtoUpdate {
  ProtoUpdate() = delete;

  class Reader;
  class Builder;
  class Pipeline;
  typedef ::capnp::schemas::ProtoUpdateType_b27487b25fea119e ProtoUpdateType;

  typedef ::capnp::schemas::ProtoShapeType_deb065a34fc3ecd8 ProtoShapeType;


  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(f63e8d35e3d1d93a, 3, 5)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class ProtoPoint::Reader {
public:
  typedef ProtoPoint Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::int32_t getX() const;

  inline  ::int32_t getY() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProtoPoint::Builder {
public:
  typedef ProtoPoint Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::int32_t getX();
  inline void setX( ::int32_t value);

  inline  ::int32_t getY();
  inline void setY( ::int32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProtoPoint::Pipeline {
public:
  typedef ProtoPoint Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ProtoRect::Reader {
public:
  typedef ProtoRect Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasBegin() const;
  inline  ::ProtoPoint::Reader getBegin() const;

  inline bool hasEnd() const;
  inline  ::ProtoPoint::Reader getEnd() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProtoRect::Builder {
public:
  typedef ProtoRect Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasBegin();
  inline  ::ProtoPoint::Builder getBegin();
  inline void setBegin( ::ProtoPoint::Reader value);
  inline  ::ProtoPoint::Builder initBegin();
  inline void adoptBegin(::capnp::Orphan< ::ProtoPoint>&& value);
  inline ::capnp::Orphan< ::ProtoPoint> disownBegin();

  inline bool hasEnd();
  inline  ::ProtoPoint::Builder getEnd();
  inline void setEnd( ::ProtoPoint::Reader value);
  inline  ::ProtoPoint::Builder initEnd();
  inline void adoptEnd(::capnp::Orphan< ::ProtoPoint>&& value);
  inline ::capnp::Orphan< ::ProtoPoint> disownEnd();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProtoRect::Pipeline {
public:
  typedef ProtoRect Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::ProtoPoint::Pipeline getBegin();
  inline  ::ProtoPoint::Pipeline getEnd();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ProtoSegStyle::Reader {
public:
  typedef ProtoSegStyle Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getBeginExt() const;

  inline  ::uint32_t getEndExt() const;

  inline  ::uint32_t getWidth() const;

  inline  ::ProtoSegStyle::ProtoEndStyle getBeginStyle() const;

  inline  ::ProtoSegStyle::ProtoEndStyle getEndStyle() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProtoSegStyle::Builder {
public:
  typedef ProtoSegStyle Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline  ::uint32_t getBeginExt();
  inline void setBeginExt( ::uint32_t value);

  inline  ::uint32_t getEndExt();
  inline void setEndExt( ::uint32_t value);

  inline  ::uint32_t getWidth();
  inline void setWidth( ::uint32_t value);

  inline  ::ProtoSegStyle::ProtoEndStyle getBeginStyle();
  inline void setBeginStyle( ::ProtoSegStyle::ProtoEndStyle value);

  inline  ::ProtoSegStyle::ProtoEndStyle getEndStyle();
  inline void setEndStyle( ::ProtoSegStyle::ProtoEndStyle value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProtoSegStyle::Pipeline {
public:
  typedef ProtoSegStyle Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ProtoNet::Reader {
public:
  typedef ProtoNet Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool getFake() const;

  inline bool getSpecial() const;

  inline bool getModified() const;

  inline  ::int32_t getId() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProtoNet::Builder {
public:
  typedef ProtoNet Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool getFake();
  inline void setFake(bool value);

  inline bool getSpecial();
  inline void setSpecial(bool value);

  inline bool getModified();
  inline void setModified(bool value);

  inline  ::int32_t getId();
  inline void setId( ::int32_t value);

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProtoNet::Pipeline {
public:
  typedef ProtoNet Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

class ProtoUpdate::Reader {
public:
  typedef ProtoUpdate Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasNet() const;
  inline  ::ProtoNet::Reader getNet() const;

  inline  ::int32_t getOrderInOwner() const;

  inline  ::ProtoUpdate::ProtoUpdateType getType() const;

  inline bool hasBegin() const;
  inline  ::ProtoPoint::Reader getBegin() const;

  inline bool hasEnd() const;
  inline  ::ProtoPoint::Reader getEnd() const;

  inline bool hasOffsetBox() const;
  inline  ::ProtoRect::Reader getOffsetBox() const;

  inline  ::int32_t getLayerNum() const;

  inline bool getBottomConnected() const;

  inline bool getTopConnected() const;

  inline bool getTapered() const;

  inline  ::int32_t getViaDefId() const;

  inline  ::ProtoUpdate::ProtoShapeType getShapeType() const;

  inline bool hasStyle() const;
  inline  ::ProtoSegStyle::Reader getStyle() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class ProtoUpdate::Builder {
public:
  typedef ProtoUpdate Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasNet();
  inline  ::ProtoNet::Builder getNet();
  inline void setNet( ::ProtoNet::Reader value);
  inline  ::ProtoNet::Builder initNet();
  inline void adoptNet(::capnp::Orphan< ::ProtoNet>&& value);
  inline ::capnp::Orphan< ::ProtoNet> disownNet();

  inline  ::int32_t getOrderInOwner();
  inline void setOrderInOwner( ::int32_t value);

  inline  ::ProtoUpdate::ProtoUpdateType getType();
  inline void setType( ::ProtoUpdate::ProtoUpdateType value);

  inline bool hasBegin();
  inline  ::ProtoPoint::Builder getBegin();
  inline void setBegin( ::ProtoPoint::Reader value);
  inline  ::ProtoPoint::Builder initBegin();
  inline void adoptBegin(::capnp::Orphan< ::ProtoPoint>&& value);
  inline ::capnp::Orphan< ::ProtoPoint> disownBegin();

  inline bool hasEnd();
  inline  ::ProtoPoint::Builder getEnd();
  inline void setEnd( ::ProtoPoint::Reader value);
  inline  ::ProtoPoint::Builder initEnd();
  inline void adoptEnd(::capnp::Orphan< ::ProtoPoint>&& value);
  inline ::capnp::Orphan< ::ProtoPoint> disownEnd();

  inline bool hasOffsetBox();
  inline  ::ProtoRect::Builder getOffsetBox();
  inline void setOffsetBox( ::ProtoRect::Reader value);
  inline  ::ProtoRect::Builder initOffsetBox();
  inline void adoptOffsetBox(::capnp::Orphan< ::ProtoRect>&& value);
  inline ::capnp::Orphan< ::ProtoRect> disownOffsetBox();

  inline  ::int32_t getLayerNum();
  inline void setLayerNum( ::int32_t value);

  inline bool getBottomConnected();
  inline void setBottomConnected(bool value);

  inline bool getTopConnected();
  inline void setTopConnected(bool value);

  inline bool getTapered();
  inline void setTapered(bool value);

  inline  ::int32_t getViaDefId();
  inline void setViaDefId( ::int32_t value);

  inline  ::ProtoUpdate::ProtoShapeType getShapeType();
  inline void setShapeType( ::ProtoUpdate::ProtoShapeType value);

  inline bool hasStyle();
  inline  ::ProtoSegStyle::Builder getStyle();
  inline void setStyle( ::ProtoSegStyle::Reader value);
  inline  ::ProtoSegStyle::Builder initStyle();
  inline void adoptStyle(::capnp::Orphan< ::ProtoSegStyle>&& value);
  inline ::capnp::Orphan< ::ProtoSegStyle> disownStyle();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class ProtoUpdate::Pipeline {
public:
  typedef ProtoUpdate Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::ProtoNet::Pipeline getNet();
  inline  ::ProtoPoint::Pipeline getBegin();
  inline  ::ProtoPoint::Pipeline getEnd();
  inline  ::ProtoRect::Pipeline getOffsetBox();
  inline  ::ProtoSegStyle::Pipeline getStyle();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline  ::int32_t ProtoPoint::Reader::getX() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoPoint::Builder::getX() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ProtoPoint::Builder::setX( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t ProtoPoint::Reader::getY() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoPoint::Builder::getY() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ProtoPoint::Builder::setY( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoRect::Reader::hasBegin() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoRect::Builder::hasBegin() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoPoint::Reader ProtoRect::Reader::getBegin() const {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::ProtoPoint::Builder ProtoRect::Builder::getBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoPoint::Pipeline ProtoRect::Pipeline::getBegin() {
  return  ::ProtoPoint::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ProtoRect::Builder::setBegin( ::ProtoPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::ProtoPoint::Builder ProtoRect::Builder::initBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ProtoRect::Builder::adoptBegin(
    ::capnp::Orphan< ::ProtoPoint>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoPoint> ProtoRect::Builder::disownBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool ProtoRect::Reader::hasEnd() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoRect::Builder::hasEnd() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoPoint::Reader ProtoRect::Reader::getEnd() const {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::ProtoPoint::Builder ProtoRect::Builder::getEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoPoint::Pipeline ProtoRect::Pipeline::getEnd() {
  return  ::ProtoPoint::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ProtoRect::Builder::setEnd( ::ProtoPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::ProtoPoint::Builder ProtoRect::Builder::initEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ProtoRect::Builder::adoptEnd(
    ::capnp::Orphan< ::ProtoPoint>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoPoint> ProtoRect::Builder::disownEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline  ::uint32_t ProtoSegStyle::Reader::getBeginExt() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t ProtoSegStyle::Builder::getBeginExt() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ProtoSegStyle::Builder::setBeginExt( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t ProtoSegStyle::Reader::getEndExt() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t ProtoSegStyle::Builder::getEndExt() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ProtoSegStyle::Builder::setEndExt( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline  ::uint32_t ProtoSegStyle::Reader::getWidth() const {
  return _reader.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::uint32_t ProtoSegStyle::Builder::getWidth() {
  return _builder.getDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ProtoSegStyle::Builder::setWidth( ::uint32_t value) {
  _builder.setDataField< ::uint32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::ProtoSegStyle::ProtoEndStyle ProtoSegStyle::Reader::getBeginStyle() const {
  return _reader.getDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}

inline  ::ProtoSegStyle::ProtoEndStyle ProtoSegStyle::Builder::getBeginStyle() {
  return _builder.getDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS);
}
inline void ProtoSegStyle::Builder::setBeginStyle( ::ProtoSegStyle::ProtoEndStyle value) {
  _builder.setDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<6>() * ::capnp::ELEMENTS, value);
}

inline  ::ProtoSegStyle::ProtoEndStyle ProtoSegStyle::Reader::getEndStyle() const {
  return _reader.getDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}

inline  ::ProtoSegStyle::ProtoEndStyle ProtoSegStyle::Builder::getEndStyle() {
  return _builder.getDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS);
}
inline void ProtoSegStyle::Builder::setEndStyle( ::ProtoSegStyle::ProtoEndStyle value) {
  _builder.setDataField< ::ProtoSegStyle::ProtoEndStyle>(
      ::capnp::bounded<7>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoNet::Reader::getFake() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline bool ProtoNet::Builder::getFake() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ProtoNet::Builder::setFake(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoNet::Reader::getSpecial() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline bool ProtoNet::Builder::getSpecial() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ProtoNet::Builder::setSpecial(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoNet::Reader::getModified() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline bool ProtoNet::Builder::getModified() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ProtoNet::Builder::setModified(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t ProtoNet::Reader::getId() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoNet::Builder::getId() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS);
}
inline void ProtoNet::Builder::setId( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<1>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::hasNet() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoUpdate::Builder::hasNet() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoNet::Reader ProtoUpdate::Reader::getNet() const {
  return ::capnp::_::PointerHelpers< ::ProtoNet>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline  ::ProtoNet::Builder ProtoUpdate::Builder::getNet() {
  return ::capnp::_::PointerHelpers< ::ProtoNet>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoNet::Pipeline ProtoUpdate::Pipeline::getNet() {
  return  ::ProtoNet::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void ProtoUpdate::Builder::setNet( ::ProtoNet::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoNet>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::ProtoNet::Builder ProtoUpdate::Builder::initNet() {
  return ::capnp::_::PointerHelpers< ::ProtoNet>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void ProtoUpdate::Builder::adoptNet(
    ::capnp::Orphan< ::ProtoNet>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoNet>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoNet> ProtoUpdate::Builder::disownNet() {
  return ::capnp::_::PointerHelpers< ::ProtoNet>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline  ::int32_t ProtoUpdate::Reader::getOrderInOwner() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoUpdate::Builder::getOrderInOwner() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setOrderInOwner( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<0>() * ::capnp::ELEMENTS, value);
}

inline  ::ProtoUpdate::ProtoUpdateType ProtoUpdate::Reader::getType() const {
  return _reader.getDataField< ::ProtoUpdate::ProtoUpdateType>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::ProtoUpdate::ProtoUpdateType ProtoUpdate::Builder::getType() {
  return _builder.getDataField< ::ProtoUpdate::ProtoUpdateType>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setType( ::ProtoUpdate::ProtoUpdateType value) {
  _builder.setDataField< ::ProtoUpdate::ProtoUpdateType>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::hasBegin() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoUpdate::Builder::hasBegin() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoPoint::Reader ProtoUpdate::Reader::getBegin() const {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::ProtoPoint::Builder ProtoUpdate::Builder::getBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoPoint::Pipeline ProtoUpdate::Pipeline::getBegin() {
  return  ::ProtoPoint::Pipeline(_typeless.getPointerField(1));
}
#endif  // !CAPNP_LITE
inline void ProtoUpdate::Builder::setBegin( ::ProtoPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::ProtoPoint::Builder ProtoUpdate::Builder::initBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void ProtoUpdate::Builder::adoptBegin(
    ::capnp::Orphan< ::ProtoPoint>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoPoint> ProtoUpdate::Builder::disownBegin() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool ProtoUpdate::Reader::hasEnd() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoUpdate::Builder::hasEnd() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoPoint::Reader ProtoUpdate::Reader::getEnd() const {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::ProtoPoint::Builder ProtoUpdate::Builder::getEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoPoint::Pipeline ProtoUpdate::Pipeline::getEnd() {
  return  ::ProtoPoint::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void ProtoUpdate::Builder::setEnd( ::ProtoPoint::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::ProtoPoint::Builder ProtoUpdate::Builder::initEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void ProtoUpdate::Builder::adoptEnd(
    ::capnp::Orphan< ::ProtoPoint>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoPoint>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoPoint> ProtoUpdate::Builder::disownEnd() {
  return ::capnp::_::PointerHelpers< ::ProtoPoint>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool ProtoUpdate::Reader::hasOffsetBox() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoUpdate::Builder::hasOffsetBox() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoRect::Reader ProtoUpdate::Reader::getOffsetBox() const {
  return ::capnp::_::PointerHelpers< ::ProtoRect>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::ProtoRect::Builder ProtoUpdate::Builder::getOffsetBox() {
  return ::capnp::_::PointerHelpers< ::ProtoRect>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoRect::Pipeline ProtoUpdate::Pipeline::getOffsetBox() {
  return  ::ProtoRect::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void ProtoUpdate::Builder::setOffsetBox( ::ProtoRect::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoRect>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::ProtoRect::Builder ProtoUpdate::Builder::initOffsetBox() {
  return ::capnp::_::PointerHelpers< ::ProtoRect>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void ProtoUpdate::Builder::adoptOffsetBox(
    ::capnp::Orphan< ::ProtoRect>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoRect>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoRect> ProtoUpdate::Builder::disownOffsetBox() {
  return ::capnp::_::PointerHelpers< ::ProtoRect>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

inline  ::int32_t ProtoUpdate::Reader::getLayerNum() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoUpdate::Builder::getLayerNum() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setLayerNum( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<2>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::getBottomConnected() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<48>() * ::capnp::ELEMENTS);
}

inline bool ProtoUpdate::Builder::getBottomConnected() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<48>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setBottomConnected(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<48>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::getTopConnected() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<49>() * ::capnp::ELEMENTS);
}

inline bool ProtoUpdate::Builder::getTopConnected() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<49>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setTopConnected(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<49>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::getTapered() const {
  return _reader.getDataField<bool>(
      ::capnp::bounded<50>() * ::capnp::ELEMENTS);
}

inline bool ProtoUpdate::Builder::getTapered() {
  return _builder.getDataField<bool>(
      ::capnp::bounded<50>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setTapered(bool value) {
  _builder.setDataField<bool>(
      ::capnp::bounded<50>() * ::capnp::ELEMENTS, value);
}

inline  ::int32_t ProtoUpdate::Reader::getViaDefId() const {
  return _reader.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}

inline  ::int32_t ProtoUpdate::Builder::getViaDefId() {
  return _builder.getDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setViaDefId( ::int32_t value) {
  _builder.setDataField< ::int32_t>(
      ::capnp::bounded<3>() * ::capnp::ELEMENTS, value);
}

inline  ::ProtoUpdate::ProtoShapeType ProtoUpdate::Reader::getShapeType() const {
  return _reader.getDataField< ::ProtoUpdate::ProtoShapeType>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}

inline  ::ProtoUpdate::ProtoShapeType ProtoUpdate::Builder::getShapeType() {
  return _builder.getDataField< ::ProtoUpdate::ProtoShapeType>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS);
}
inline void ProtoUpdate::Builder::setShapeType( ::ProtoUpdate::ProtoShapeType value) {
  _builder.setDataField< ::ProtoUpdate::ProtoShapeType>(
      ::capnp::bounded<8>() * ::capnp::ELEMENTS, value);
}

inline bool ProtoUpdate::Reader::hasStyle() const {
  return !_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline bool ProtoUpdate::Builder::hasStyle() {
  return !_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS).isNull();
}
inline  ::ProtoSegStyle::Reader ProtoUpdate::Reader::getStyle() const {
  return ::capnp::_::PointerHelpers< ::ProtoSegStyle>::get(_reader.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline  ::ProtoSegStyle::Builder ProtoUpdate::Builder::getStyle() {
  return ::capnp::_::PointerHelpers< ::ProtoSegStyle>::get(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ProtoSegStyle::Pipeline ProtoUpdate::Pipeline::getStyle() {
  return  ::ProtoSegStyle::Pipeline(_typeless.getPointerField(4));
}
#endif  // !CAPNP_LITE
inline void ProtoUpdate::Builder::setStyle( ::ProtoSegStyle::Reader value) {
  ::capnp::_::PointerHelpers< ::ProtoSegStyle>::set(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), value);
}
inline  ::ProtoSegStyle::Builder ProtoUpdate::Builder::initStyle() {
  return ::capnp::_::PointerHelpers< ::ProtoSegStyle>::init(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}
inline void ProtoUpdate::Builder::adoptStyle(
    ::capnp::Orphan< ::ProtoSegStyle>&& value) {
  ::capnp::_::PointerHelpers< ::ProtoSegStyle>::adopt(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ProtoSegStyle> ProtoUpdate::Builder::disownStyle() {
  return ::capnp::_::PointerHelpers< ::ProtoSegStyle>::disown(_builder.getPointerField(
      ::capnp::bounded<4>() * ::capnp::POINTERS));
}


CAPNP_END_HEADER

