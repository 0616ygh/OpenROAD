#!/bin/bash
set -e

_installCommon()
{
    # tools versions
    cmake_version=3.14
    swig_version=4.0.1
    boost_version=1.72.0
    eigen_version=3.3
    lemon_version=1.3.1
    spdlog_version=1.8.1

    # temp dir to download and compile
    base=/tmp/installers
    mkdir -p "$base"

    # CMake
    cd "$base"
    wget https://cmake.org/files/v${cmake_version}/cmake-${cmake_version}.0-Linux-x86_64.sh
    chmod +x cmake-${cmake_version}.0-Linux-x86_64.sh
    ./cmake-${cmake_version}.0-Linux-x86_64.sh --skip-license --prefix=/usr/local
    rm -rf cmake-${cmake_version}.0-Linux-x86_64.sh

    # SWIG
    cd "$base"
    wget https://github.com/swig/swig/archive/rel-${swig_version}.tar.gz
    tar xfz rel-${swig_version}.tar.gz
    rm -rf rel-${swig_version}.tar.gz
    cd "$base"/swig-rel-${swig_version}
    ./autogen.sh
    ./configure --prefix=/usr
    make -j $(nproc)
    make install
    rm -rf swig-rel-${swig_version}

    # boost
    cd "$base"
    boost_version_underscore=${boost_version//./_}
    wget https://dl.bintray.com/boostorg/release/${boost_version}/source/boost_${boost_version_underscore}.tar.gz
    tar -xf boost_${boost_version_underscore}.tar.gz
    cd boost_${boost_version_underscore}
    ./bootstrap.sh
    ./b2 install --with-iostreams --with-test -j $(nproc)
    rm -rf boost_${boost_version_underscore}

    # eigen
    cd "$base"
    git clone -b ${eigen_version} https://gitlab.com/libeigen/eigen.git
    cd eigen
    mkdir build
    cd build
    cmake ..
    make install

    # lemon
    cd "$base"
    wget http://lemon.cs.elte.hu/pub/sources/lemon-${lemon_version}.tar.gz
    tar -xf lemon-${lemon_version}.tar.gz
    cd lemon-${lemon_version}
    cmake -B build .
    cmake --build build -j $(nproc) --target install

    # spdlog
    cd "$base"
    git clone -b "v${spdlog_version}" https://github.com/gabime/spdlog.git
    cd spdlog
    mkdir build
    cd build
    cmake ..
    make install -j

    cd /
    rm -rf "$base"
}


_installUbuntu()
{

    export DEBIAN_FRONTEND="noninteractive"

    apt-get -y update

    apt-get -y install tzdata

    apt-get -y install \
        automake \
        autotools-dev \
        bison \
        clang-7 \
        flex \
        g++ \
        gcc \
        git \
        lcov \
        libpcre3 \
        libpcre3-dev \
        python3 \
        python3-dev \
        qt5-default \
        rlwrap \
        tcl \
        tcl-dev \
        tcl-tclreadline \
        tk \
        tk-dev \
        wget \
        zlib1g \
        zlib1g-dev
    }


_installCentos()
{

    yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm

    yum groupinstall -y "Development Tools"

    yum install -y centos-release-scl

    yum install -y \
        devtoolset-8 \
        devtoolset-8-libatomic-devel \
        libstdc++ \
        llvm-toolset-7.0 \
        llvm-toolset-7.0-libomp-devel \
        pcre-devel \
        qt5-qtbase-devel \
        tcl \
        tcl-devel \
        tcl-tclreadline-devel \
        tk \
        tk-devel \
        wget

    yum install -y http://downloads.sourceforge.net/ltp/lcov-1.14-1.noarch.rpm

    yum install -y https://repo.ius.io/ius-release-el7.rpm

    yum install -y \
        python36u \
        python36u-devel \
        python36u-libs \
        python36u-pip

    yum clean -y all

    rm -rf /var/lib/apt/lists/*
}


# Main

PLATFORM="$(uname -s)"
case "$PLATFORM" in
    "Linux" )
        if [[ -f /etc/os-release ]]; then
            OS=$(awk -F= '/^NAME/{print $2}' /etc/os-release | sed 's/"//g')
        else
            OS="UNIDENTIFIED (could not find /etc/os-release)"
        fi
        ;;
    *)
        echo "$PLATFORM is not supported"
        exit 1
        ;;
esac

case "$OS" in
    "CentOS Linux" )
        _installCentos
        ;;
    "Ubuntu" )
        _installUbuntu
        ;;
    *)
        echo "Unsuported system: $OS"
        echo "Supported systems are Centos7 and Ubuntu 20.04"
        exit 1
        ;;
esac

_installCommon
