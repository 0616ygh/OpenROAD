#!/bin/bash

set -e

cd "$(dirname $(readlink -f $0))/../"

baseDir=$(pwd)
commitSha="$(git rev-parse HEAD)"
osList=( centos7 ubuntu20 )
compilerList=( gcc clang )
targetList=( base dev )
org=openroadeda

_help()
{
    cat <<EOF
usage: $0 create [os [target [compiler]]]
       $0 test   [os [compiler]]
       $0 push   [os [target]]
       $0 help
available os = ${osList[@]}
available compiler = ${compilerList[@]}
available target = ${targetList[@]}
EOF
    exit 1
}

_setup()
{
    if [[ $# -ne 3 ]]; then
        echo "_setup takes 3 arguments:"
        echo "_setup os compiler target"
        exit 1
    fi
    os="${1}"
    compiler="${2}"
    target="${3}"
    file="docker/Dockerfile.${target}"
    case "${target}" in
        "base" )
            case "${os}" in
                "centos7")
                    fromImage="centos:centos7"
                    ;;
                "ubuntu20")
                    fromImage="ubuntu:20.04"
                    ;;
                *)
                    echo "Target OS ${os} not supported"
                    _help
                    ;;
            esac
            context="etc"
            imageTag="${org}/${os}-${target}"
            buildArgs="--build-arg fromImage=${fromImage}"
            ;;
        "dev" )
            fromImage="${org}/${os}-base"
            context="."
            imageTag="${org}/${os}-${compiler}-${commitSha}"
            buildArgs="--build-arg fromImage=${fromImage} --build-arg compiler=${compiler}"
            ;;
        *)
            echo "Target ${target} not found"
            _help
    esac
}

_test()
{
    _setup "${1:-centos7}" "${2:-gcc}" "dev"
    # create image with compiled binary if it does not exists
    if [[ $(docker images -q ${imageTag}) == "" ]]; then
        _create "${1:-centos7}" "dev" "${2:-gcc}"
    fi
    echo "Run regression test on ${imageTag}"
    docker run --rm -it "${imageTag}" "./test/regression"
}

_create()
{
    _setup "${1:-centos7}" "${3:-gcc}" "${2:-base}"
    echo "Create docker image ${imageTag} using ${file}"
    docker build --file "${file}" --tag "${imageTag}" ${buildArgs} "${context}"
}

_push()
{
    _setup "${1:-centos7}" "NONE" "${2:-base}"
    echo "Push docker image ${imageTag} to DockerHub [NOT IMPLEMENTED YET]"
}

# script has at most 3 arguments
if [[ $# -gt 3 ]]; then
    echo "Too many arguments"
    _help
fi

# check if the main rule is valid
if [[ -z $(command -v "_${_rule}") ]]; then
    echo "Command ${_rule} not found"
    _help
else
    # call rule with arguments
    "_${_rule}" ${@}
fi
